/**
 * @param {string} s
 * @return {boolean}
 */
var isValid = function(s) {
    
    let stack = []; // ['(',]
    const map = {
        '{': 1,
        '}': -1,
        '[': 2,
        ']': -2,
        '(': 3,
        ')': -3,
    }
    
    // loop through the string chars
    for(const c of s) {
        
        // c value: ( -> ]
        
        let prev = stack[stack.length - 1]; // loop value: undefined -> (
        
        // if prev value and current value is a pair, pop prev value and do continue to next loop
        if (map[prev] > 0 && map[c] < 0 && (map[prev] + map[c] === 0))  {
            stack.pop();
            continue;
        } else {
            stack.push(c);
        }
    }
    
    // after loop, if stack is still full, means it's not valid
    if (stack.length) {
        return false;
    } else {
        return true;
    }
};
